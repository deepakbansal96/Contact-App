[{"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\index.js":"1","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\App.js":"2","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\Header.js":"3","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\AddContact.js":"4","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactDetail.js":"5","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\EditContact.js":"6","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactList.js":"7","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\context\\ContactsCrudContext.js":"8","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactCard.js":"9","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\api\\contacts.js":"10"},{"size":208,"mtime":1645692740564,"results":"11","hashOfConfig":"12"},{"size":921,"mtime":1645697346021,"results":"13","hashOfConfig":"12"},{"size":227,"mtime":1645697586505,"results":"14","hashOfConfig":"12"},{"size":1383,"mtime":1645697254881,"results":"15","hashOfConfig":"12"},{"size":806,"mtime":1645697448143,"results":"16","hashOfConfig":"12"},{"size":1566,"mtime":1645697563408,"results":"17","hashOfConfig":"12"},{"size":1370,"mtime":1645698665849,"results":"18","hashOfConfig":"12"},{"size":2161,"mtime":1645697667680,"results":"19","hashOfConfig":"12"},{"size":1124,"mtime":1645697399891,"results":"20","hashOfConfig":"12"},{"size":98,"mtime":1645697079437,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ef1m09",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\index.js",[],["46","47"],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\App.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\Header.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\AddContact.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactDetail.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\EditContact.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactList.js",["48"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useContactsCrud } from \"../context/ContactsCrudContext\";\nimport ContactCard from \"./ContactCard\";\n\nconst ContactList = (props) => {\n  const { contacts, retrieveContacts, searchHandler, text, searchResults } =\n    useContactsCrud();\n\n  useEffect(() => {\n    retrieveContacts();\n  }, []);\n\n  const renderContactList = (text.length < 1 ? contacts : searchResults).map(\n    (contact) => {\n      return <ContactCard contact={contact} key={contact.id} />;\n    }\n  );\n\n  const onUserSearch = (e) => {\n    searchHandler(e.target.value);\n  };\n\n  return (\n    <div className=\"main\">\n      <h2>\n        Contact List\n        <Link to=\"/add\">\n          <button className=\"ui button blue right\">Add Contact</button>\n        </Link>\n      </h2>\n      <div className=\"ui search\">\n        <div className=\"ui icon input\">\n          <input\n            type=\"text\"\n            placeholder=\"Search Contacts\"\n            className=\"prompt\"\n            value={text}\n            onChange={(e) => onUserSearch(e)}\n          />\n          <i className=\"search icon\"></i>\n        </div>\n      </div>\n      <div className=\"ui celled list\">\n        {renderContactList.length > 0\n          ? renderContactList\n          : \"No Contacts Available!\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\context\\ContactsCrudContext.js",["49"],"import { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { uuid } from \"uuidv4\";\n\nconst contactsCrudContext = createContext();\n\nexport function ContactsCrudContextProvider({ children }) {\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const searchHandler = (searchTerm) => {\n    setText(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        console.log(contact);\n        return Object.values(contact)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const value = {\n    contact,\n    contacts,\n    retrieveContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler,\n    searchHandler,\n    text,\n    searchResults,\n  };\n\n  return (\n    <contactsCrudContext.Provider value={value}>\n      {children}\n    </contactsCrudContext.Provider>\n  );\n}\n\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext);\n}\n","C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\components\\ContactCard.js",[],"C:\\Users\\deepa\\Desktop\\Contact App\\contact-app\\src\\api\\contacts.js",[],["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":12,"column":6,"nodeType":"58","endLine":12,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":9,"column":19,"nodeType":"62","messageId":"63","endLine":9,"endColumn":29},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveContacts'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'setContact' is assigned a value but never used.","Identifier","unusedVar",["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [retrieveContacts]",{"range":"71","text":"72"},[374,376],"[retrieveContacts]"]